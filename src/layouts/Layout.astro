---
import '../styles/global.css';
import SearchModal from '../components/SearchModal.astro';
import ThemeToggle from '../components/ThemeToggle.astro';
import CozeChat from '../components/CozeChat.astro';

export interface Props {
  title: string;
  description?: string;
  image?: string;
}

const { title, description = "developer", image } = Astro.props;
const siteTitle = "Protagonistss";
const siteDescription = "不迁怒，不二过。";
---

<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <script is:inline>
      // 此脚本在 <head> 中内联，以在页面渲染前阻塞并运行
      // 从而避免用户设置了主题偏好时出现 FOUC (无样式内容闪烁)
      (function() {
        const theme = localStorage.getItem('theme') || 'system';
        const systemIsDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        const finalClass = theme === 'dark' || (theme === 'system' && systemIsDark) ? 'dark' : 'light';
        document.documentElement.classList.add(finalClass);
      })();
    </script>
    
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="apple-touch-icon" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title ? `${title} | ${siteTitle}` : siteTitle}</title>
    <meta property="og:title" content={title ? `${title} | ${siteTitle}` : siteTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    {image && <meta property="og:image" content={image} />}
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title ? `${title} | ${siteTitle}` : siteTitle} />
    <meta name="twitter:description" content={description} />
    {image && <meta name="twitter:image" content={image} />}
  </head>
  <body class="min-h-screen grid grid-rows-[auto_1fr_auto]">
    <header class="sticky top-0 z-50 bg-white/80 dark:bg-gray-900/80 backdrop-blur-md border-b border-gray-200 dark:border-gray-700">
      <nav class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center py-4">
          <a href="/" class="flex items-center gap-3 text-2xl font-bold text-primary-600 dark:text-primary-400 hover:text-primary-800 dark:hover:text-primary-300 transition-colors group">
            <div class="w-10 h-10 bg-gradient-to-br from-yellow-400 to-orange-500 rounded-lg flex items-center justify-center group-hover:scale-105 group-hover:shadow-lg group-hover:shadow-yellow-400/30 transition-all duration-300">
              <svg class="w-6 h-6 text-white animate-pulse" viewBox="0 0 24 24" fill="currentColor">
                <path d="M13 2L3 14h9l-1 8 10-12h-9l1-8z"/>
              </svg>
            </div>
            <div>
              <div class="text-xl font-bold bg-gradient-to-r from-gray-900 via-blue-600 to-indigo-600 dark:from-white dark:via-blue-400 dark:to-indigo-400 bg-clip-text text-transparent group-hover:from-blue-600 group-hover:to-indigo-600 dark:group-hover:from-blue-300 dark:group-hover:to-indigo-300 transition-all duration-300">
                {siteTitle}
              </div>
              <div class="text-xs text-gray-500 dark:text-gray-400 font-normal group-hover:text-blue-500 dark:group-hover:text-blue-400 transition-colors duration-300">技术博客</div>
            </div>
          </a>
          
          <!-- 桌面端导航 -->
          <div class="hidden md:flex items-center space-x-8">
            <a href="/" class="nav-link text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 font-medium transition-colors relative group" data-page="home">
              首页
              <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-primary-500 group-hover:w-full transition-all duration-300"></span>
            </a>
            <a href="/categories" class="nav-link text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 font-medium transition-colors relative group" data-page="categories">
              分类
              <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-primary-500 group-hover:w-full transition-all duration-300"></span>
            </a>
            <a href="/archives" class="nav-link text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 font-medium transition-colors relative group" data-page="archives">
              归档
              <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-primary-500 group-hover:w-full transition-all duration-300"></span>
            </a>
            <a href="/tools" class="nav-link text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 font-medium transition-colors relative group" data-page="tools">
              工具
              <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-primary-500 group-hover:w-full transition-all duration-300"></span>
            </a>
            <a href="/profile" class="nav-link text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 font-medium transition-colors relative group" data-page="profile">
              作者
              <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-primary-500 group-hover:w-full transition-all duration-300"></span>
            </a>
          </div>
          
          <!-- 搜索和移动端菜单按钮 -->
          <div class="flex items-center gap-4">
            <!-- 主题切换按钮 -->
            <ThemeToggle />
            
            <!-- 搜索按钮 -->
            <button 
              data-search-trigger
              class="p-2 text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors"
              title="搜索文章 (Ctrl+K)"
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
              </svg>
            </button>
            
            
            <!-- 移动端菜单按钮 -->
            <button class="md:hidden p-2 text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors" id="mobile-menu-button">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
              </svg>
            </button>
          </div>
        </div>
        
        <!-- 移动端菜单 -->
        <div class="md:hidden hidden border-t border-gray-200 dark:border-gray-700 py-4" id="mobile-menu">
          <div class="flex flex-col space-y-4">
            <a href="/" class="nav-link text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 font-medium transition-colors" data-page="home">
              首页
            </a>
            <a href="/categories" class="nav-link text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 font-medium transition-colors" data-page="categories">
              分类
            </a>
            <a href="/archives" class="nav-link text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 font-medium transition-colors" data-page="archives">
              归档
            </a>
            <a href="/tools" class="nav-link text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 font-medium transition-colors" data-page="tools">
              工具
            </a>
            <a href="/profile" class="nav-link text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 font-medium transition-colors" data-page="profile">
              作者
            </a>
            <!-- 移动端主题切换 -->
            <div class="flex items-center justify-between pt-2 border-t border-gray-200 dark:border-gray-700">
              <span class="text-sm text-gray-600 dark:text-gray-400">主题</span>
              <ThemeToggle />
            </div>
          </div>
        </div>
      </nav>
    </header>
    <main>
      <slot />
    </main>
    <footer id="site-footer" class="border-t border-gray-200 dark:border-gray-700 bg-white/70 dark:bg-gray-900/60 backdrop-blur supports-[backdrop-filter]:backdrop-blur transition-colors duration-300 fixed left-0 right-0 bottom-0 footer-peek footer-animated">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="text-center text-gray-600 dark:text-gray-400">
          <p>&copy; 2025 Protagonistss. 技术分享，欢迎转载，请注明出处。</p>
        </div>
      </div>
    </footer>
    
    <!-- 搜索模态框 -->
    <SearchModal />
    
    <!-- Coze 智能助手 -->
    <CozeChat />
    
    <script is:inline>
      // 移动端菜单切换
      document.addEventListener('DOMContentLoaded', function() {
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');
        const footerEl = document.getElementById('site-footer');
        
        if (mobileMenuButton && mobileMenu) {
          mobileMenuButton.addEventListener('click', function() {
            mobileMenu.classList.toggle('hidden');
          });
        }
        
        // 导航链接选中状态
        function updateActiveNavLink() {
          const currentPath = window.location.pathname;
          const navLinks = document.querySelectorAll('.nav-link');
          
          navLinks.forEach(link => {
            const href = link.getAttribute('href');
            const page = link.getAttribute('data-page');
            
            // 移除所有选中状态
            link.classList.remove('text-primary-600', 'dark:text-primary-400');
            link.classList.add('text-gray-600', 'dark:text-gray-300');
            
            // 检查是否匹配当前页面
            let isActive = false;
            
            if (page === 'home' && (currentPath === '/' || currentPath === '')) {
              isActive = true;
            } else if (page === 'categories' && (currentPath.startsWith('/categories') || currentPath.startsWith('/tags') || currentPath.startsWith('/tech-stacks'))) {
              isActive = true;
            } else if (page === 'archives' && currentPath.startsWith('/archives')) {
              isActive = true;
            } else if (page === 'tools' && currentPath.startsWith('/tools')) {
              isActive = true;
            } else if (page === 'profile' && currentPath.startsWith('/profile')) {
              isActive = true;
            }
            
            if (isActive) {
              link.classList.remove('text-gray-600', 'dark:text-gray-300');
              link.classList.add('text-primary-600', 'dark:text-primary-400');
              
              // 为桌面端添加底部指示器
              if (window.innerWidth >= 768) {
                const indicator = link.querySelector('span');
                if (indicator) {
                  indicator.classList.remove('w-0');
                  indicator.classList.add('w-full');
                }
              }
            } else {
              // 移除底部指示器
              const indicator = link.querySelector('span');
              if (indicator) {
                indicator.classList.remove('w-full');
                indicator.classList.add('w-0');
              }
            }
          });
        }
        
        // 页面加载时更新选中状态
        updateActiveNavLink();
        
        // 监听路由变化（如果使用 SPA 路由）
        window.addEventListener('popstate', updateActiveNavLink);
        
        // 监听窗口大小变化，重新计算选中状态
        window.addEventListener('resize', updateActiveNavLink);

        // 底部吸附视觉：接近底部时上滑显示，完全到底时实色
        function updateFooterSolidState() {
          if (!footerEl) return;
          const doc = document.documentElement;
          const threshold = 120; // 提前阈值：距离底部 120px 时开始上滑显示
          const distanceToBottom = doc.scrollHeight - (window.innerHeight + window.scrollY);
          const showFooter = distanceToBottom <= threshold;
          const reachedBottom = distanceToBottom <= 2;

          if (showFooter) {
            footerEl.classList.add('footer-visible');
          } else {
            footerEl.classList.remove('footer-visible');
          }

          if (reachedBottom) {
            footerEl.classList.add('footer-solid');
          } else {
            footerEl.classList.remove('footer-solid');
          }
        }
        updateFooterSolidState();
        window.addEventListener('scroll', updateFooterSolidState, { passive: true });
        window.addEventListener('resize', updateFooterSolidState);
      });

      // --- 主题切换逻辑 ---
      (function() {
        const themeToggles = document.querySelectorAll('#theme-toggle');
        const sunIcons = document.querySelectorAll('#sun-icon');
        const moonIcons = document.querySelectorAll('#moon-icon');
        const html = document.documentElement;

        if (themeToggles.length === 0) {
          return;
        }

        const updateIcons = (isDark) => {
          sunIcons.forEach(icon => icon.style.display = isDark ? 'block' : 'none');
          moonIcons.forEach(icon => icon.style.display = isDark ? 'none' : 'block');
        };

        const applyTheme = (theme) => {
          const systemIsDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
          const isDark = theme === 'dark' || (theme === 'system' && systemIsDark);
          
          html.classList.remove('light', 'dark');
          html.classList.add(isDark ? 'dark' : 'light');
          updateIcons(isDark);
        };

        const toggleTheme = () => {
          const currentTheme = localStorage.getItem('theme') || 'system';
          const systemIsDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
          let newTheme;

          if (currentTheme === 'system') {
            newTheme = systemIsDark ? 'light' : 'dark';
          } else if (currentTheme === 'light') {
            newTheme = 'dark';
          } else {
            newTheme = 'system';
          }
          
          localStorage.setItem('theme', newTheme);
          applyTheme(newTheme);
        };

        // 初始化
        const initialTheme = localStorage.getItem('theme') || 'system';
        applyTheme(initialTheme);
        
        // 为所有切换按钮添加事件监听
        themeToggles.forEach(toggle => toggle.addEventListener('click', toggleTheme));

        // 监听系统主题变化
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
          const currentTheme = localStorage.getItem('theme') || 'system';
          if (currentTheme === 'system') {
            applyTheme('system');
          }
        });
      })();
    </script>
  </body>
</html>

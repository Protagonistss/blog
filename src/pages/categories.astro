---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { getTagStats, getCategoryStats, groupPostsByTechStack } from '../utils/posts';
import { getTagColorTheme, getTagCloudColor } from '../utils/colors';
import { getTechStackIcon, getTechStackColor } from '../utils/techStack';
import { formatDate } from '../utils/date';

const allPosts = await getCollection('posts');
const publishedPosts = allPosts.filter(post => !post.data.draft);

// 获取所有标签和分类
const tags = [...new Set(publishedPosts.flatMap(post => post.data.tags))];
const categories = [...new Set(publishedPosts.flatMap(post => post.data.categories))];

// 获取统计信息
const tagStats = getTagStats(publishedPosts);
const categoryStats = getCategoryStats(publishedPosts);

// 按技术栈分组
const postsByTechStack = groupPostsByTechStack(publishedPosts);
---

<Layout title="文章分类" description="按标签、分类和技术栈整理的文章分类">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- 页面头部 -->
    <header class="text-center mb-12">
      <div class="inline-flex items-center px-4 py-2 bg-gradient-to-r from-blue-100 to-purple-100 dark:from-blue-900/30 dark:to-purple-900/30 text-blue-700 dark:text-blue-300 rounded-full text-sm font-medium mb-6">
        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
          <path d="M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z"/>
        </svg>
        文章分类
      </div>
      <h1 class="text-5xl font-bold bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 dark:from-blue-400 dark:via-purple-400 dark:to-pink-400 bg-clip-text text-transparent mb-4">
        文章分类导航
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
        通过标签、分类和技术栈快速发现相关文章，探索技术话题的深度内容
      </p>
      <div class="mt-6 flex justify-center gap-6 text-sm">
        <div class="flex items-center gap-2 px-4 py-2 bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300 rounded-full">
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
            <path d="M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z"/>
          </svg>
          <span class="font-medium">{tags.length} 个标签</span>
        </div>
        <div class="flex items-center gap-2 px-4 py-2 bg-purple-50 dark:bg-purple-900/20 text-purple-700 dark:text-purple-300 rounded-full">
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
            <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"/>
          </svg>
          <span class="font-medium">{categories.length} 个分类</span>
        </div>
        <div class="flex items-center gap-2 px-4 py-2 bg-green-50 dark:bg-green-900/20 text-green-700 dark:text-green-300 rounded-full">
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
          <span class="font-medium">{Object.keys(postsByTechStack).length} 个技术栈</span>
        </div>
      </div>
    </header>

    <!-- 标签云 -->
    <section class="mb-12">
      <div class="bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50 dark:from-blue-900/20 dark:via-purple-900/20 dark:to-pink-900/20 rounded-3xl p-8">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6 text-center">标签云</h2>
        <div class="flex flex-wrap justify-center gap-3">
          {tagStats.map(({ tag, count }, index) => {
            const size = count > 5 ? 'text-lg' : count > 3 ? 'text-base' : 'text-sm';
            const opacity = count > 5 ? 'opacity-100' : count > 3 ? 'opacity-80' : 'opacity-60';
            const colorClass = getTagCloudColor(index);
          
            return (
              <a 
                href={`/tags/${tag}`}
                class={`group inline-flex items-center px-4 py-2 rounded-xl text-sm font-medium transition-all duration-200 hover:scale-105 shadow-sm hover:shadow-md ${size} ${opacity} ${colorClass}`}
              >
                #{tag}
                <span class="ml-2 px-2 py-1 bg-white/50 text-gray-600 rounded-lg text-xs group-hover:bg-white/20 group-hover:text-white">
                  {count}
                </span>
              </a>
            );
          })}
        </div>
      </div>
    </section>

    <!-- 分类网格 -->
    <div class="grid gap-8 lg:grid-cols-2">
      <!-- 标签分类 -->
      <section>
        <div class="flex items-center gap-3 mb-6">
          <div class="w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center">
            <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z"/>
            </svg>
          </div>
          <div>
            <h2 class="text-2xl font-bold text-gray-900 dark:text-white">标签分类</h2>
            <p class="text-gray-600 dark:text-gray-400">按文章标签浏览内容</p>
          </div>
        </div>
        
        <div class="space-y-4">
          {tagStats.slice(0, 8).map(({ tag, count }, index) => {
            const theme = getTagColorTheme(index);
            
            return (
              <a 
                href={`/tags/${tag}`}
                class={`group ${theme.bg} dark:bg-gray-800 rounded-2xl border ${theme.border} dark:border-gray-700 p-4 hover:shadow-lg hover:shadow-${theme.hover.split('-')[1]}-500/20 transition-all duration-300 hover:-translate-y-1 flex items-center justify-between`}
              >
                <div class="flex items-center gap-3">
                  <div class={`w-8 h-8 bg-gradient-to-br ${theme.countBg} rounded-lg flex items-center justify-center`}>
                    <span class="text-white font-bold text-sm">{count}</span>
                  </div>
                  <span class={`text-lg font-semibold ${theme.text} dark:text-white group-hover:text-gray-900 dark:group-hover:text-white transition-colors`}>
                    #{tag}
                  </span>
                </div>
                <svg class={`w-4 h-4 text-gray-400 group-hover:text-gray-600 dark:group-hover:text-white transition-colors`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                </svg>
              </a>
            );
          })}
          
          {tagStats.length > 8 && (
            <div class="text-center pt-4">
              <a href="/tags" class="text-blue-600 dark:text-blue-400 hover:underline">
                查看所有标签 ({tagStats.length} 个) →
              </a>
            </div>
          )}
        </div>
      </section>

      <!-- 技术栈分类 -->
      <section>
        <div class="flex items-center gap-3 mb-6">
          <div class="w-12 h-12 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center">
            <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
          </div>
          <div>
            <h2 class="text-2xl font-bold text-gray-900 dark:text-white">技术栈分类</h2>
            <p class="text-gray-600 dark:text-gray-400">按技术栈浏览内容</p>
          </div>
        </div>
        
        <div class="space-y-4">
          {Object.entries(postsByTechStack).slice(0, 8).map(([techStack, posts], index) => (
            <a 
              href={`/categories/${techStack}`}
              class="group bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 p-4 hover:shadow-lg transition-all duration-300 hover:-translate-y-1 flex items-center justify-between"
            >
              <div class="flex items-center gap-3">
                <div class={`w-8 h-8 bg-gradient-to-br ${getTechStackColor(techStack)} rounded-lg flex items-center justify-center text-lg`}>
                  {getTechStackIcon(techStack)}
                </div>
                <div>
                  <span class="text-lg font-semibold text-gray-900 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
                    {techStack}
                  </span>
                  <p class="text-sm text-gray-600 dark:text-gray-400">{posts.length} 篇文章</p>
                </div>
              </div>
              <svg class="w-4 h-4 text-gray-400 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
              </svg>
            </a>
          ))}
          
          {Object.keys(postsByTechStack).length > 8 && (
            <div class="text-center pt-4">
              <a href="/tech-stacks" class="text-green-600 dark:text-green-400 hover:underline">
                查看所有技术栈 ({Object.keys(postsByTechStack).length} 个) →
              </a>
            </div>
          )}
        </div>
      </section>
    </div>

    <!-- 最新文章预览 -->
    <section class="mt-12">
      <div class="bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-900 rounded-3xl p-8">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6 text-center">最新文章</h2>
        <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
          {publishedPosts
            .sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime())
            .slice(0, 6)
            .map(post => (
              <a 
                href={`/posts/${post.slug}`}
                class="group bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-4 hover:shadow-md hover:border-blue-300 dark:hover:border-blue-600 transition-all"
              >
                <h3 class="font-semibold text-gray-900 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors mb-2 line-clamp-2">
                  {post.data.title}
                </h3>
                <p class="text-sm text-gray-600 dark:text-gray-400 mb-3 line-clamp-2">
                  {post.data.description || '暂无描述'}
                </p>
                <div class="flex items-center justify-between text-xs text-gray-500 dark:text-gray-500">
                  <time>{formatDate(post.data.pubDate)}</time>
                  <div class="flex gap-1">
                    {post.data.tags.slice(0, 2).map(tag => (
                      <span class="px-2 py-1 bg-gray-100 dark:bg-gray-700 rounded text-xs">
                        {tag}
                      </span>
                    ))}
                  </div>
                </div>
              </a>
            ))}
        </div>
      </div>
    </section>
  </div>
</Layout>
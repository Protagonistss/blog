---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { groupPostsByTechStack } from '../utils/posts';
import { getTechStackIcon, getTechStackColor } from '../utils/techStack';
import { formatDate } from '../utils/date';

const allPosts = await getCollection('posts');
const publishedPosts = allPosts.filter(post => !post.data.draft);

// 按技术栈分组
const postsByTechStack = groupPostsByTechStack(publishedPosts);
---

<Layout title="技术栈分类" description="按技术栈分类的文章列表">
  <div class="max-w-6xl mx-auto px-4 py-8">
    <!-- 页面头部 -->
    <header class="text-center mb-12">
      <div class="inline-flex items-center px-4 py-2 bg-gradient-to-r from-blue-100 to-purple-100 dark:from-blue-900/30 dark:to-purple-900/30 text-blue-700 dark:text-blue-300 rounded-full text-sm font-medium mb-6">
        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
          <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
        </svg>
        技术栈分类
      </div>
      <h1 class="text-5xl font-bold bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 dark:from-blue-400 dark:via-purple-400 dark:to-pink-400 bg-clip-text text-transparent mb-4">
        技术文章分类
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
        按技术栈分类整理的文章，方便快速找到相关技术内容
      </p>
    </header>

    <!-- 技术栈统计 -->
    <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3 mb-12">
      {Object.entries(postsByTechStack).map(([techStack, posts]) => (
        <div class="bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 p-6 hover:shadow-lg transition-shadow">
          <div class="flex items-center gap-3 mb-4">
            <div class={`w-12 h-12 bg-gradient-to-br ${getTechStackColor(techStack)} rounded-xl flex items-center justify-center text-2xl`}>
              {getTechStackIcon(techStack)}
            </div>
            <div>
              <h3 class="text-xl font-bold text-gray-900 dark:text-white">{techStack}</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">{posts.length} 篇文章</p>
            </div>
          </div>
          <div class="space-y-2">
            {posts.slice(0, 3).map(post => (
              <a 
                href={`/posts/${post.slug}`}
                class="block text-sm text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors truncate"
              >
                {post.data.title}
              </a>
            ))}
            {posts.length > 3 && (
              <p class="text-xs text-gray-500 dark:text-gray-500">还有 {posts.length - 3} 篇文章...</p>
            )}
          </div>
        </div>
      ))}
    </div>

    <!-- 详细分类列表 -->
    <div class="space-y-8">
      {Object.entries(postsByTechStack).map(([techStack, posts]) => (
        <section class="bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 p-8">
          <div class="flex items-center gap-4 mb-6">
            <div class={`w-16 h-16 bg-gradient-to-br ${getTechStackColor(techStack)} rounded-2xl flex items-center justify-center text-3xl`}>
              {getTechStackIcon(techStack)}
            </div>
            <div>
              <h2 class="text-3xl font-bold text-gray-900 dark:text-white">{techStack}</h2>
              <p class="text-gray-600 dark:text-gray-400">{posts.length} 篇文章</p>
            </div>
          </div>
          
          <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
            {posts.map(post => (
              <a 
                href={`/posts/${post.slug}`}
                class="group block p-4 border border-gray-200 dark:border-gray-700 rounded-xl hover:shadow-md hover:border-blue-300 dark:hover:border-blue-600 transition-all"
              >
                <h3 class="font-semibold text-gray-900 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors mb-2">
                  {post.data.title}
                </h3>
                <p class="text-sm text-gray-600 dark:text-gray-400 mb-2">
                  {post.data.description || '暂无描述'}
                </p>
                <div class="flex items-center justify-between text-xs text-gray-500 dark:text-gray-500">
                  <time>{formatDate(post.data.pubDate)}</time>
                  <div class="flex gap-2">
                    {post.data.tags.slice(0, 2).map(tag => (
                      <span class="px-2 py-1 bg-gray-100 dark:bg-gray-700 rounded text-xs">
                        {tag}
                      </span>
                    ))}
                  </div>
                </div>
              </a>
            ))}
          </div>
        </section>
      ))}
    </div>
  </div>
</Layout>

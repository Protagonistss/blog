---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const allPosts = await getCollection('posts');
const posts = allPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// 按年份分组
const postsByYear = posts.reduce((acc, post) => {
  const year = post.data.pubDate.getFullYear();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {} as Record<number, typeof posts>);

const years = Object.keys(postsByYear).map(Number).sort((a, b) => b - a);
---

<Layout title="归档" description="所有文章的归档页面">
  <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <header class="mb-8">
      <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
        文章归档
      </h1>
      <p class="text-gray-600 dark:text-gray-400">
        共 {posts.length} 篇文章
      </p>
    </header>

    <div class="space-y-8">
      {years.map(year => (
        <section>
          <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-6">
            {year} 年 ({postsByYear[year].length} 篇)
          </h2>
          <div class="space-y-4">
            {postsByYear[year].map(post => (
              <article class="border-l-4 border-primary-500 pl-4 py-2">
                <a href={`/posts/${post.slug}`} class="block hover:text-primary-600 dark:hover:text-primary-400">
                  <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-2">
                    {post.data.title}
                  </h3>
                  <div class="flex flex-wrap items-center gap-4 text-sm text-gray-500 dark:text-gray-500">
                    <time datetime={post.data.pubDate.toISOString()}>
                      {post.data.pubDate.toLocaleDateString('zh-CN')}
                    </time>
                    {post.data.categories.length > 0 && (
                      <div class="flex gap-2">
                        {post.data.categories.map(category => (
                          <span class="px-2 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded text-xs">
                            {category}
                          </span>
                        ))}
                      </div>
                    )}
                    {post.data.tags.length > 0 && (
                      <div class="flex gap-1">
                        {post.data.tags.map(tag => (
                          <span class="px-2 py-1 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded text-xs">
                            #{tag}
                          </span>
                        ))}
                      </div>
                    )}
                  </div>
                </a>
              </article>
            ))}
          </div>
        </section>
      ))}
    </div>
  </div>
</Layout>

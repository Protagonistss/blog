---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { formatDate, formatDateISO } from '../../utils/date';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  const categories = [...new Set(posts.flatMap(post => post.data.categories))];
  
  return categories.map(category => ({
    params: { category },
    props: { category, posts: posts.filter(post => post.data.categories.includes(category)) }
  }));
}

const { category, posts } = Astro.props;
const filteredPosts = posts
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<Layout title={`分类: ${category}`} description={`${category} 分类下的所有文章`}>
  <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <header class="mb-8">
      <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
        分类: {category}
      </h1>
      <p class="text-gray-600 dark:text-gray-400">
        共 {filteredPosts.length} 篇文章
      </p>
    </header>

    <div class="space-y-6">
      {filteredPosts.map(post => (
        <article class="border border-gray-200 dark:border-gray-700 rounded-lg p-6 hover:shadow-md transition-shadow">
          <a href={`/posts/${post.slug}`} class="block">
            <h2 class="text-2xl font-semibold mb-3 text-gray-900 dark:text-white hover:text-primary-600 dark:hover:text-primary-400">
              {post.data.title}
            </h2>
            <p class="text-gray-600 dark:text-gray-400 mb-4">
              {post.data.description || '暂无描述'}
            </p>
            <div class="flex flex-wrap items-center gap-4 text-sm text-gray-500 dark:text-gray-500">
              <time datetime={formatDateISO(post.data.pubDate)}>
                {formatDate(post.data.pubDate)}
              </time>
              {post.data.tags.length > 0 && (
                <div class="flex gap-1">
                  {post.data.tags.map(tag => (
                    <span class="px-2 py-1 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded text-xs">
                      #{tag}
                    </span>
                  ))}
                </div>
              )}
            </div>
          </a>
        </article>
      ))}
    </div>
  </div>
</Layout>
